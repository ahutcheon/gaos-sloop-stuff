# call this with a site_species string (e.g. Airport_grand) to get back a collection of candidate models
# the site_species.inp and site_species_surveys.txt files extracted from Sloop should be in the current directory
# (which will probably be filled with assorted mark files as the models are run)
#
# library(RMark) is needed before this will work...
# MarkViewer<-gedit # is good to use print(results[n])

analyse_site_species <- function (site_species) {

	# read the site_species.inp file
	input.ch<-convert.inp(site_species)
	# read the site_species_surveys.txt first line of inter-survey gaps (in years)
	intervals.ch<-scan(paste0(site_species, "_surveys.txt"), nlines=1)

	# build up the various components of the candidate models

	# Our models are robust design Huggins without and with full heterogeneity (RDHuggins (Mo and Mt) or RDHFHet (M+h and Mt+h))

	# all models have S depend on time (i.e. survival differs between years)
	S.time=list(formula=~time)
	# Mo models have detection probability vary between years (sessions), but fixed within a survey series for a year
	# share=TRUE for p terms indicates that c=p (we assume photography has no impact on animals so captuer = recapture)
	p.session=list(formula=~session, share=TRUE)
	# our models in previous years have ingnored temporary emigration (i.e. fixed Gamma'' to zero); these are the no movement (nm) models
	GammaDoublePrime.fixed=list(fixed=0)
	GammaPrime.fixed=list(fixed=1)

	Model.Mo.nm<-mark(data=input.ch, model="RDHuggins", model.name=paste0(site_species, ".Mo.nm"), time.intervals=intervals.ch, model.parameters=list(S=S.time, p=p.session, GammaDoublePrime=GammaDoublePrime.fixed, GammaPrime=GammaPrime.fixed))

	# Mt models have detection probability vary between years (sessions) and within a survey series for a year (time)
	p.time.session=list(formula=~-1+session:time,share=TRUE)

	Model.Mt.nm<-mark(data=input.ch, model="RDHuggins", model.name=paste0(site_species, ".Mt.nm"), time.intervals=intervals.ch, model.parameters=list(S=S.time, p=p.time.session, GammaDoublePrime=GammaDoublePrime.fixed, GammaPrime=GammaPrime.fixed))

	# for the RDHFHet models we need to add the mixture component to p (for M+h we use split detectabilities that are common across all surveys in the year)
	# pi is the mixture proportions; making it per session is consistent with previous analysis
	p.session.mixture=list(formula=~session+mixture, share=TRUE)
	pi.session=list(formula=~session)

	Model.Mh.nm<-mark(data=input.ch, model="RDHFHet", model.name=paste0(site_species, ".Mh.nm"), time.intervals=intervals.ch, model.parameters=list(S=S.time, p=p.session.mixture, pi=pi.session, GammaDoublePrime=GammaDoublePrime.fixed, GammaPrime=GammaPrime.fixed))

	# Mt+h model adds the mixture (two detecability classes) per survey, but we keep pi (mixture proportion) per session as in previous years analysis
	# Question: Does anything other than model complexity drive us to vary pi by session rather than session:time?
	# Answer: We belive some animals are hyper-vigilant, others not.
	#	  This split should remain constant through a (closed) session, but may vary between years as the population changes.
	p.time.session.mixture=list(formula=~-1+session:time+mixture,share=TRUE)

	Model.Mht.nm<-mark(data=input.ch, model="RDHFHet", model.name=paste0(site_species, ".Mht.nm"), time.intervals=intervals.ch, model.parameters=list(S=S.time, p=p.time.session.mixture, pi=pi.session, GammaDoublePrime=GammaDoublePrime.fixed, GammaPrime=GammaPrime.fixed))

	# Three of the four classical temporary movement models for robust design models make sense:
	#	nm (above) - not so much biologically plausible as a potentially parsimonious simplified model
	#	random movement (rm) - probability of moving out equals that of moving in (Gamma''=Gamma', achieved by shared=TRUE) and varies by year
	GammaDoublePrime.random=list(formula=~time,share=TRUE)
	# 	Markovian movement (Mm) - probabilities of moving in and out differ (but each is fixed across years, keeping parameters manageable)
	GammaDoublePrime.dot=list(formula=~1)
	GammaPrime.dot=list(formula=~1)
	#	the "even flow" model is ignored (net in/out is zero) as no basis to suspect we have resource constrained conditions
	#	(i.e. conditions under which an animal leaving makes space for another to come in)
	# Which of nm, rm, Mm is most biologically plausible probably varies by site
	# (e.g. constrained by fence might favour nm, much more habitat adjacent to study site than in it might favour Mm)
	# Note: above list isn't exhaustive
	#	(e.g. could fix Gamma''=Gamma' across years GammaDoublePrime.dotshare=list(formula=~1,share=TRUE); intermediate between nm and rm?)
	# Note: not all Gamma parameters can be estimated in all models (e.g. first/last years), this does not automatically cast doubt on those models	


	Model.Mo.rm<-mark(data=input.ch, model="RDHuggins", model.name=paste0(site_species, ".Mo.rm"), time.intervals=intervals.ch, model.parameters=list(S=S.time, p=p.session, GammaDoublePrime=GammaDoublePrime.random))
	Model.Mt.rm<-mark(data=input.ch, model="RDHuggins", model.name=paste0(site_species, ".Mt.rm"), time.intervals=intervals.ch, model.parameters=list(S=S.time, p=p.time.session, GammaDoublePrime=GammaDoublePrime.random))
	Model.Mh.rm<-mark(data=input.ch, model="RDHFHet", model.name=paste0(site_species, ".Mh.rm"), time.intervals=intervals.ch, model.parameters=list(S=S.time, p=p.session.mixture, pi=pi.session, GammaDoublePrime=GammaDoublePrime.random))
	Model.Mht.rm<-mark(data=input.ch, model="RDHFHet", model.name=paste0(site_species, ".Mht.rm"), time.intervals=intervals.ch, model.parameters=list(S=S.time, p=p.time.session.mixture, pi=pi.session, GammaDoublePrime=GammaDoublePrime.random))

	Model.Mo.Mm<-mark(data=input.ch, model="RDHuggins", model.name=paste0(site_species, ".Mo.Mm"), time.intervals=intervals.ch, model.parameters=list(S=S.time, p=p.session, GammaDoublePrime=GammaDoublePrime.dot, GammaPrime=GammaPrime.dot))
	Model.Mt.Mm<-mark(data=input.ch, model="RDHuggins", model.name=paste0(site_species, ".Mt.Mm"), time.intervals=intervals.ch, model.parameters=list(S=S.time, p=p.time.session, GammaDoublePrime=GammaDoublePrime.dot, GammaPrime=GammaPrime.dot))
	Model.Mh.Mm<-mark(data=input.ch, model="RDHFHet", model.name=paste0(site_species, ".Mh.Mm"), time.intervals=intervals.ch, model.parameters=list(S=S.time, p=p.session.mixture, pi=pi.session, GammaDoublePrime=GammaDoublePrime.dot, GammaPrime=GammaPrime.dot))
	Model.Mht.Mm<-mark(data=input.ch, model="RDHFHet", model.name=paste0(site_species, ".Mht.Mm"), time.intervals=intervals.ch, model.parameters=list(S=S.time, p=p.time.session.mixture, pi=pi.session, GammaDoublePrime=GammaDoublePrime.dot, GammaPrime=GammaPrime.dot))


	# gather up what we've done and pass it back to the caller
	return(collect.models())
}

